FROM ubuntu:20.04

ENV DEBIAN_FRONTEND=noninteractive
ENV DEBCONF_NONINTERACTIVE_SEEN=true
ENV HARDHAT_ENV_DOCKER_IMAGE="hardhat_env"

RUN apt-get clean
RUN apt-get update
RUN apt-get install -y curl \
    git \
    cmake \
    build-essential \
    gcc \
    apt-transport-https \
    software-properties-common \
    wget \
    npm

# Install Docker
RUN mkdir -p /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
RUN echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update
RUN apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# Installing grafana agent
RUN mkdir -p /etc/apt/keyrings/
RUN wget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | tee /etc/apt/keyrings/grafana.gpg > /dev/null
RUN echo "deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main" | tee -a /etc/apt/sources.list.d/grafana.list

RUN apt-get update

RUN apt-get install grafana-agent-flow

RUN npm install -g yarn && npm install -g n
RUN n lts

WORKDIR /opt/app
COPY . /opt/app

RUN curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- --default-toolchain stable -y

RUN whoami

ENV PATH="/root/.cargo/bin:${PATH}"

WORKDIR /opt/app/api/hardhat_env
RUN docker build -t hardhat_env .

WORKDIR /opt/app/api
RUN cargo build --release
RUN chmod +x ./docker_run.sh

EXPOSE 8000
WORKDIR /opt/app/api

ENTRYPOINT [ "./docker_run.sh" ]
